// cd api && goctl api go -api fca.api -dir .
// goctl api go -api fca.api -dir .


// serverPackages 数组包含了各个云服务器套餐的信息。
// 每个套餐对象有基本信息如 packageId（套餐唯一标识）、packageName（套餐名称）、cpuCores（CPU 核心数）、memory（内存大小）、hardDisk（硬盘大小）、gpuType（GPU 类型）、monthlyPrice（每月基础价格）和 description（套餐描述）。
// discounts 数组用于存储该套餐的优惠信息。
// duration 表示优惠适用的时长类型（如 yearly 表示年付，twoYearly 表示两年付）。
// discountType 可以是 percentage（百分比折扣）、fixed（固定金额折扣）或 bonusMonths（赠送月数）。
// discountValue 根据 discountType 而定，如果是 percentage 则为折扣百分比（如 0.5 表示 50% 折扣），如果是 fixed 则为固定折扣金额，如果是 bonusMonths 则为赠送的月数。
// bonusMonths 额外赠送的月数（如果 discountType 是 bonusMonths，则此值与 discountValue 相同）。
// timeLimit 对象用于设定优惠的时间限制。
// startDate 和 endDate 定义了优惠的常规时间范围。
// holidayDiscount 对象用于在特定节假日期间提供额外的折扣。它包含 name（节假日名称）和 percentage（节假日折扣百分比）。

/*
type (
	  ServerPackage   {
    PackageId    int    `json:"packageId"`
    PackageName  string `json:"packageName"`
    CpuCores     int    `json:"cpuCores"`
    Memory       int    `json:"memory"`
    HardDisk     int    `json:"hardDisk"`
    GpuType      string `json:"gpuType"`
    MonthlyPrice float64 `json:"monthlyPrice"`
    Description  string `json:"description"`
    Discounts    []Discount `json:"discounts"`
}

	// Discount 表示套餐的优惠结构体
	  Discount   {
		Duration      int            `json:"duration"` // monthly 1  twoYearly 2
		DurationCnt      int            `json:"duration_cnt"` // monthly 1  twoYearly 2
		DiscountName   string            `json:"discountType"`
		Percentage float64           `json:"percentage"`
		BonusMonths   int               `json:"bonusMonths"`
		StartDate     time.Time         `json:"startDate"`
		EndDate       time.Time         `json:"endDate"`
	}

 
 

	// 规格定义请求
	SpecificationAddReq {
		Name        string  `json:"name"`                  // 规格名称
		CPU         int     `json:"cpu"`                   // CPU核心数
		Memory      int     `json:"memory"`                // 内存大小(GB)
		Disk        int     `json:"disk"`                  // 磁盘大小(GB)
		Bandwidth   int     `json:"bandwidth"`             // 带宽(Mbps)
		PriceHourly float64 `json:"price_hourly"`         // 按小时价格
		PriceMonthly float64 `json:"price_monthly"`       // 包月价格
	}

	// 规格定义响应
	SpecificationResp {
		Id          int64   `json:"id"`
		Name        string  `json:"name"`
		CPU         int     `json:"cpu"`
		Memory      int     `json:"memory"`
		Disk        int     `json:"disk"`
		Bandwidth   int     `json:"bandwidth"`
		PriceHourly float64 `json:"price_hourly"`
		PriceMonthly float64 `json:"price_monthly"`
		CreatedAt   int64   `json:"created_at"`
		UpdatedAt   int64   `json:"updated_at"`
	}

	// 计费明细请求
	BillingDetailReq {
		ServerId    int64  `json:"server_id"`    // 服务器ID
		StartTime   int64  `json:"start_time"`   // 开始时间
		EndTime     int64  `json:"end_time"`     // 结束时间
	}

	// 计费明细响应
	BillingDetailResp {
		ServerId    int64   `json:"server_id"`
		TotalHours  float64 `json:"total_hours"`  // 总计费时长(小时)
		Amount      float64 `json:"amount"`       // 总金额
		Details     []BillingItem `json:"details"`// 计费明细
	}

	// 计费明细项
	BillingItem {
		Date        string  `json:"date"`         // 计费日期
		Hours       float64 `json:"hours"`        // 计费时长
		UnitPrice   float64 `json:"unit_price"`   // 单价
		Amount      float64 `json:"amount"`       // 金额
	}

	// 创建订单请求
	OrderCreateReq {
		ServerId    int64  `json:"server_id"`     // 服务器ID
		BillingType string `json:"billing_type"`  // 计费类型: hourly/monthly
		Duration    int    `json:"duration"`      // 购买时长(月)，按小时则为0
	}

	// 订单响应
	OrderResp {
		OrderId     string  `json:"order_id"`
		ServerId    int64   `json:"server_id"`
		Amount      float64 `json:"amount"`       // 订单金额
		Status      string  `json:"status"`       // 订单状态
		CreatedAt   int64   `json:"created_at"`
	}

)
 
@server(
	group: billing
	jwt: Auth
	prefix: /api/v1
	middleware: AuthInterceptor
	timeout: 15s
)

service fca-api {
	// 规格管理
	@handler SpecificationAdd
	post /specifications (SpecificationAddReq) returns (SpecificationResp)
	
	@handler SpecificationList
	get /specifications returns ([]SpecificationResp)
	
	// 计费管理
	@handler BillingDetail
	post /billing/detail (BillingDetailReq) returns (BillingDetailResp)
	
	// 订单管理
	@handler OrderCreate
	post /orders (OrderCreateReq) returns (OrderResp)
	
	@handler OrderDetail
	get /orders/:orderId returns (OrderResp)
}
*/
 
 